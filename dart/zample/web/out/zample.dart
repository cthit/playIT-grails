// Auto-generated from zample.html.
// DO NOT EDIT.

library zample_html;

import 'dart:html' as autogenerated;
import 'dart:svg' as autogenerated_svg;
import 'package:web_ui/web_ui.dart' as autogenerated;
import 'package:web_ui/observe/observable.dart' as __observe;
import 'xclickcounter.dart';
import 'dart:html';
import 'dart:json';
import 'package:web_ui/web_ui.dart';
import 'dart:async';


// Original code


const SERVER_URL = 'http://129.16.177.148:8080/youTubeInTheHubbServer/video/';

final __changes = new __observe.Observable();

String __$title = "";
String get title {
  if (__observe.observeReads) {
    __observe.notifyRead(__changes, __observe.ChangeRecord.FIELD, 'title');
  }
  return __$title;
}
set title(String value) {
  if (__observe.hasObservers(__changes)) {
    __observe.notifyChange(__changes, __observe.ChangeRecord.FIELD, 'title',
        __$title, value);
  }
  __$title = value;
}
String __$imgurl = "Lolbolol";
String get imgurl {
  if (__observe.observeReads) {
    __observe.notifyRead(__changes, __observe.ChangeRecord.FIELD, 'imgurl');
  }
  return __$imgurl;
}
set imgurl(String value) {
  if (__observe.hasObservers(__changes)) {
    __observe.notifyChange(__changes, __observe.ChangeRecord.FIELD, 'imgurl',
        __$imgurl, value);
  }
  __$imgurl = value;
}


void main() {
  query("#add_button")
    ..onClick.listen(addVideo);
  new Timer.periodic(new Duration(seconds:1), (Timer t) =>
      showVideos());
}

void addVideo(MouseEvent event) {
  var videoURL = query("#url_field").value;
  HttpRequest.getString(SERVER_URL + 'addVideo?cid=' + 'wildahl' +
      '&url=' + videoURL).then((response) {
    print(response);
  });
  showVideos();
}

void showVideos() {
  HttpRequest.getString(SERVER_URL + "showQueue").then((response) {
    List parsedList = parse(response);
    //fore(parsedList[0]);
    int t=parsedList[0].length;
    print("$t\n");
    //print(parsedList[0].length+"\n");
    parsedList[0].forEach((key,val) => print("$key  $val"));
    //print(parsedList[0]["title"]);

    //print(parsedList[0].get("title"));
 /*   for(var a in parsedList[0]){
      print(" | "+a);
    }*/
  });
}

// Additional generated code
void init_autogenerated() {
  var __root = autogenerated.document.body;
  var __e0;
  var __t = new autogenerated.Template(__root);
  __e0 = __root.nodes[3].nodes[3];
  __t.oneWayBind(() => imgurl, (e) { if (__e0.xtag.imgurl != e) __e0.xtag.imgurl = e; }, false, false);
  __t.oneWayBind(() => 0, (e) { if (__e0.xtag.votes != e) __e0.xtag.votes = e; }, false, false);
  __t.component(new VideoComponent()..host = __e0);
  __t.create();
  __t.insert();
}

//# sourceMappingURL=zample.dart.map
// Generated by CoffeeScript 1.6.3
(function() {
  var App, MediaItem, SpotifyItem, ToastBar, YouTubeItem, server_url, _ref, _ref1,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  server_url = "http://hubben.chalmers.it:8080/youTubeInTheHubbServer/video/";

  Handlebars.registerHelper('ntobr', function(string) {
    return new Handlebars.safeString(string.replace(/\n/g, '<br>'));
  });

  Handlebars.registerHelper('limit', function(weight) {
    if (weight > 99) {
      return 'âˆž';
    }
    return weight;
  });

  Handlebars.registerHelper('voted', function(video_id) {
    var upvote;
    upvote = app.getVote(video_id);
    if (upvote == null) {
      return;
    }
    if (upvote) {
      return 'upvote';
    }
    return 'downvote';
  });

  jQuery.ajaxPrefilter(function(options) {
    options.xhrFields = {
      withCredentials: true
    };
  });

  MediaItem = (function() {
    function MediaItem(id, isUpvoted) {
      this.id = id;
      this.isUpvoted = isUpvoted;
    }

    MediaItem.prototype.getURL = function() {
      return this.id;
    };

    return MediaItem;

  })();

  YouTubeItem = (function(_super) {
    __extends(YouTubeItem, _super);

    function YouTubeItem() {
      _ref = YouTubeItem.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    YouTubeItem.prototype.getURL = function() {
      return 'youtu.be/' + YouTubeItem.__super__.getURL.apply(this, arguments);
    };

    return YouTubeItem;

  })(MediaItem);

  SpotifyItem = (function(_super) {
    __extends(SpotifyItem, _super);

    function SpotifyItem() {
      _ref1 = SpotifyItem.__super__.constructor.apply(this, arguments);
      return _ref1;
    }

    SpotifyItem.prototype.getURL = function() {
      return 'spotify:' + SpotifyItem.__super__.getURL.apply(this, arguments);
    };

    return SpotifyItem;

  })(MediaItem);

  App = (function() {
    function App() {
      var e;
      this.output = $('#videofeed');
      try {
        this.votedata = JSON.parse(typeof localStorage !== "undefined" && localStorage !== null ? localStorage.getItem('vote_data') : void 0);
      } catch (_error) {
        e = _error;
        this.votedata = {};
      }
      this.authenticate();
    }

    App.prototype.authenticate = function() {
      var _this = this;
      $.getJSON('https://chalmers.it/auth/userInfo.php', function(data) {
        _this.user = data;
        return console.log(_this.fail(function() {
          if (confirm('You are not signed in, please grab a cookie from the cookie jar!')) {
            return window.open('http://chalmers.it/auth');
          }
        }));
      });
    };

    App.prototype.addVideo = function(opts) {
      return this.queryBackend('addVideo', opts, function(data) {
        Toast.toast('Result: ' + data);
        saveVote(opts);
        return this.reloadData();
      });
    };

    App.prototype.queryBackend = function(method, opts, callback) {
      var full_url;
      opts.url = opts.item.getURL();
      opts.cid = this.user.cid;
      full_url = 'exampledata.json';
      $.get(full_url, callback);
    };

    App.prototype.saveVote = function(item) {
      this.votedata[item.id] = up;
      return typeof localStorage !== "undefined" && localStorage !== null ? localStorage.setItem('vote_data', JSON.stringify(this.vote_data)) : void 0;
    };

    App.prototype.reloadData = function() {
      return this.queryBackend('showQueue', {}, function(data) {
        data = data.sort(function(v1, v2) {
          return v2.weight - v1.weight;
        });
        this.output.html(Handlebars.templates['video'](data));
        return console.log('reloaded with: ', data);
      });
    };

    return App;

  })();

  String.prototype.toRed = function() {
    return '<span style="color:red">' + this + '</span>';
  };

  ToastBar = (function() {
    function ToastBar() {
      this.toaster = $('#toaster');
      this.toaster.click(this.closeToast);
    }

    ToastBar.prototype.closeToast = function() {
      return this.toaster.animate({
        'height': 0
      }, function() {
        return this.toaster.hide();
      });
    };

    ToastBar.prototype.toast = function(msg, err) {
      if (err != null) {
        msg = msg.toRed();
      }
      return this.toaster.show().html('<br>' + msg + '<br><small>(Click to dismiss)</small>').animate({
        'height': 100
      }, function() {
        return setTimeout(this.closeToast, 2000);
      });
    };

    return ToastBar;

  })();

  window.Toast = new ToastBar();

  window.app = new App();

  $('#insert_video').typeahead({
    name: 'videos',
    valueKey: 'title',
    remote: 'exampledata.json',
    template: Handlebars.templates['thumbnail'],
    limit: 10
  }).on('typeahead:selected', function(obj, data) {
    console.log(data);
    return app.addVideo(data.youtubeID);
  });

  $('#videofeed').on('click', '.votes a', function() {
    var $this, upvoted, videoID;
    $this = $(this);
    videoID = $this.parent().parent().data('youtube-id');
    upvoted = $this.hasClass('upvote');
    return app.voteVideo(videoID, upvoted);
  });

}).call(this);

/*
//@ sourceMappingURL=script.map
*/
